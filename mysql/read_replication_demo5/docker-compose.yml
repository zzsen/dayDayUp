version: '3'
services:
  mysql-slave-lb:
    image: nginx:latest
    container_name: mysql-slave-lb
    ports:
    - 3311:3307
    volumes:
    - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
    - read_replication_demo5
    depends_on:
    - mysql-master
    - mysql-slave1
    - mysql-slave2
  mysql-master:
    image: mysql:8.0.29
    container_name: mysql-master
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
      MASTER_SYNC_USER: "sync_admin" #设置脚本中定义的用于同步的账号
      MASTER_SYNC_PASSWORD: "123456" #设置脚本中定义的用于同步的密码
      ADMIN_USER: "root" #当前容器用于拥有创建账号功能的数据库账号
      ADMIN_PASSWORD: "123456"
      ALLOW_HOST: "177.177.5.%" #允许同步账号的host地址
      TZ: "Asia/Shanghai" #解决时区问题
    ports:
    - 3310:3306
    networks:
      read_replication_demo5:
        ipv4_address: "177.177.5.1" #固定ip，因为从库在连接master的时候，需要设置host
    volumes:
    - ./mysql/master.sh:/docker-entrypoint-initdb.d/master.sh #挂载脚本
    - ./mysql/master:/var/lib/mysql
    command:
    -  "--server-id=1"
    -  "--character-set-server=utf8mb4"
    -  "--collation-server=utf8mb4_unicode_ci"
    -  "--log-bin=mysql-bin"
    -  "--sync_binlog=1"
  mysql-slave1:
    image: mysql:8.0.29
    container_name: mysql-slave1
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
      SLAVE_SYNC_USER: "sync_admin" #用于同步的账号，由master创建
      SLAVE_SYNC_PASSWORD: "123456"
      ADMIN_USER: "root"
      ADMIN_PASSWORD: "123456"
      MASTER_HOST: "177.177.5.1" #master地址，开启主从同步需要连接master
      TZ: "Asia/Shanghai" #设置时区
    networks:
     read_replication_demo5:
       ipv4_address: "177.177.5.2" #固定ip
    volumes:
    - ./mysql/slave.sh:/docker-entrypoint-initdb.d/slave.sh #挂载脚本
    - ./mysql/slave1/data:/var/lib/mysql
    command:
    -  "--server-id=2"
    -  "--character-set-server=utf8mb4"
    -  "--collation-server=utf8mb4_unicode_ci"
  mysql-slave2:
    image: mysql:8.0.29
    container_name: mysql-slave2
    environment:
      MYSQL_ROOT_PASSWORD: "123456"
      SLAVE_SYNC_USER: "sync_admin"
      SLAVE_SYNC_PASSWORD: "123456"
      ADMIN_USER: "root"
      ADMIN_PASSWORD: "123456"
      MASTER_HOST: "177.177.5.1"
      TZ: "Asia/Shanghai"
    networks:
      read_replication_demo5:
        ipv4_address: "177.177.5.3" #固定ip
    volumes:
    - ./mysql/slave.sh:/docker-entrypoint-initdb.d/slave.sh #挂载脚本
    - ./mysql/slave2/data:/var/lib/mysql
    command: #这里需要修改server-id，保证每个mysql容器的server-id都不一样
    -  "--server-id=3"
    -  "--character-set-server=utf8mb4"
    -  "--collation-server=utf8mb4_unicode_ci"
networks:
  read_replication_demo5:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: "177.177.5.0/16"